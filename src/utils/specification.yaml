openapi: 3.0.1
info:
  title: TP final backend
  description: Esta API se encarga de manejar información de películas.
   Para poder  modificar/actualizar o eliminar una pelicula de la basw de datos es requisito estar loguearse o registarse.
  version: 1.0.0
# servers:
#   - url: http://localhost:8080/
servers:
  - url: http://localhost:8080/movies
    description: Rutas de pelìculas.
  - url: http://localhost:8080/user
    description: Rutas de usuarios.

tags:
  - name: user
    description: Rutas relacionadas con usuarios
  - name: movies
    description: Rutas relacionadas con películas

 

paths: 
  /user/register:
    post:
      tags:
        - user
      description: Registro de usuario. Devuelve token por header para las rutas protegidas.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/userRegisterRequest"
      responses:
        200:
          description: Registro de usuario exitoso.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userRegisterResponse"
          headers:
           auth-token:
            description: Token de autenticación
            schema:
              type: string
            example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        400:
          $ref: '#/components/responses/BadRequest'          
        401:
          $ref: '#/components/responses/Unauthorized' 
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /user/login:
    post:
      tags:
        - user
      description: Inicio de sesión de usuario. Devuelve token por header para las rutas protegidas.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/userLoginRequest"
      responses:
        200:
          description: Login de usuario exito.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userLoginResponse"
          headers:
           auth-token:
            description: Token de autenticación
            schema:
              type: string
            example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        400:
          $ref: '#/components/responses/BadRequest'          
        401:
          $ref: '#/components/responses/Unauthorized' 
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

  /movies/listado :
    get:
      tags:
        - movies
      description: Esta ruta devuelve el listado total de películas de la base de datos.
      responses:
        200:
         description: OK
         content: 
           application/json:
            schema:
             $ref: '#/components/schemas/responseListMovie'
        400:
          $ref: '#/components/responses/BadRequest'          
        401:
          $ref: '#/components/responses/Unauthorized' 
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'




  /movies/buscar/{genero}:
    get:
      tags:
        - movies
      description: Lista o pelicula por genero. (generos:comedia, romantica, accion, terror, drama, infantil, otro)
      parameters:
        - $ref: '#/components/parameters/genero'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                   $ref: '#/components/schemas/responseListMovie'

        400:
          $ref: '#/components/responses/BadRequest'          
        401:
          $ref: '#/components/responses/Unauthorized' 
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'

          
  /movies/crear:
     post: 
      tags:
        - movies
      description: Esta ruta crea un item de película en la base de datos. Realiza traducciones del título y la sinopsis utilizando una API externa de traducción.
       Campos obligatorios:titulo, genero (comedia, romantica, accion, terror, drama, infantil, otro) y sinopsis.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postMovie"
      responses:
        200:
          description: Película creada con èxito.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/responseMovie'
        400:
          $ref: '#/components/responses/BadRequest'          
        401:
          $ref: '#/components/responses/Unauthorized' 
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'


  /movies/editar/{id}:
     put: 
      security:
      - bearerAuth: []
      tags:
        - movies
      description: Operacion disponible para usuarios regitrados o que hayan iniciado sesión, requiere token. 
       Esta ruta permite editar uno o varios datos de una película por medio de su id.
      
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/postMovie"
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        200:
          description: Película actualizada con èxito.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/responseMovie'
        400:
          $ref: '#/components/responses/badRequestInvalidId'          
        401:
          $ref: '#/components/responses/Unauthorized' 
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'


  /movies/eliminar/{id}:
     delete: 
       security:
       - bearerAuth: []
     
       tags:
        - movies
       description: Operacion disponible para usuarios regitrados o que hayan iniciado sesion, requiere token.
        Esta ruta permite eliminar una pelicula por su id.
       parameters:
        - $ref: '#/components/parameters/id'
       responses:
        200:
          description: Pelicula eliminada con exito.
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/deleteMovieResponse'
        400:
          $ref: '#/components/responses/badRequestInvalidId'          
        401:
          $ref: '#/components/responses/Unauthorized' 
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'


components:
 
  securitySchemes:
    bearerAuth:
      type: apiKey
      name: Authorization
      in: header
      description: Token de autenticación (sin prefijo Bearer)
    # bearerAuth:
    #   type: http
    #   scheme: bearer
    #   bearerFormat: JWT
    #   description: Token de autenticación (sin prefijo Bearer)


  schemas:
   
    postMovie:
      properties:
        titulo: 
          type: string
          description: Titulo de la pelicula.
        director: 
         type: string
         description: Nombre del director.
        duracion: 
          type: number
          description: Duracion de la pelicula en minutos.
        añoEstreno: 
           type: number
           description: Año del estreno.
        actores: 
           type: array
           description: Array con los actores principales.
           items:
            type: string
        sinopsis: 
           type: string
           description: Resumen de la trama de la pelicula.
        genero: 
           type: string  
           description: Genero al cual pertenece.
    responseMovie:
      properties:
        _id: 
          type : string
          description: ID con el cual esta guardada la pelicula
        titulo: 
          type: string
          description: Titulo de la pelicula.
        director: 
         type: string
         description: Nombre del director.
        duracion: 
          type: number
          description: Duracion de la pelicula en minutos.
        añoEstreno: 
           type: number
           description: Año del estreno.
        actores: 
           type: array
           description: Array con los actores principales.
           items:
            type: string
        sinopsis: 
           type: string
           description: Resumen de la trama de la pelicula.
        genero: 
           type: string
           description: Genero al cual pertenece.
        __v:
          type: number

    deleteMovieResponse: 
      properties:
        msg:
          type: string
          example: "Pelicula borrado ejemplo"
        movie:
          $ref: '#/components/schemas/responseMovie'
           
    responseListMovie:
      type: object
      properties:
        movies: 
          items:
            $ref: '#/components/schemas/responseMovie'

    userRegisterResponse:
      properties:      
       _id: 
          type : string
          description: ID con el cual se registro el usuario.
       username: 
          type: string
          description: Nombre de usuario.
       email: 
          type: string
          description: Email con el cual se registro el usuario.
       password: 
           type: string
           description: Contraseña encriptada.
       createdAt: 
           type: string
           description: Fecha de creacion del usuario.
    userRegisterRequest:
      properties:      
       username: 
          type: string
          description: Nombre de usuario.
       email: 
          type: string
          description: Email con el cual se registro el usuario.
       password: 
           type: string
           description: Crear contraseña.
    userLoginResponse:
      properties:
        msg:
          type: string
          example: "Login successful"
    userLoginRequest:
      properties:      
       username: 
          type: string
          description: Nombre de usuario.
       password: 
           type: string
           description: Crear contraseña.

  responses:
    badRequestInvalidId: 
       description: El id es invaldio
    Unauthorized:
      description: (Unauthorized) No hay autorizacion.
    NotFound:
      description: (NotFound) No se encontró información 
    ServerError:
      description: Error en servidor
    BadRequest:
      description: (Bad Request) Los datos enviados son incorrectos o hay datos obligatorios no enviados
    
  parameters:
    id:
      name: id
      in: path
      description: Id de la pelicula
      required: true
      schema:
        type: string
    genero:
      name: genero
      in: path
      description: Genero de la pelicula
      required: true
      schema:
        type: string
